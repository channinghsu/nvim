name: cherry-pick upstream

on:
  # Manual trigger - go to Actions tab and click "Run workflow"
  workflow_dispatch:
  # Scheduled sync (每天凌晨 3 点) - 默认禁用
  schedule: [{ cron: "0 3 * * *" }]

jobs:
  cherry-pick-upstream:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Add upstream remote
        run: |
          if ! git remote | grep -q upstream; then
            git remote add upstream https://github.com/ayamir/nvimdots.git
          fi
          git fetch upstream main
      
      - name: Cherry-pick upstream commits
        run: |
          echo "Fetching recent commits from upstream/main"
          
          # 获取 upstream/main 最近 50 个提交（排除 github-actions[bot]）
          COMMITS=$(git log --reverse --pretty=format:"%H %an" upstream/main -50 | grep -v "github-actions\[bot\]" | awk '{print $1}' || true)
          
          if [ -z "$COMMITS" ]; then
            echo "No commits to cherry-pick"
            exit 0
          fi
          
          echo "Found $(echo "$COMMITS" | wc -l) commits from upstream"
          
          # 逐个 cherry-pick，跳过已存在的提交
          CHERRY_PICKED=0
          CONFLICTS=0
          SKIPPED=0
          for commit in $COMMITS; do
            # 检查该提交是否已经存在于当前分支
            if git branch --contains $commit 2>/dev/null | grep -q "^\*"; then
              echo "⊘ Skipping $commit (already in current branch)"
              SKIPPED=$((SKIPPED + 1))
              continue
            fi
            
            echo "Cherry-picking $commit"
            if git cherry-pick $commit 2>&1; then
              CHERRY_PICKED=$((CHERRY_PICKED + 1))
              echo "✓ Successfully cherry-picked $commit"
            else
              CONFLICTS=$((CONFLICTS + 1))
              echo "✗ Conflict detected for $commit"
              git cherry-pick --abort 2>&1 || true
              echo "Skipping commit $commit due to conflicts"
            fi
          done
          
          echo "Summary: $CHERRY_PICKED commits cherry-picked, $SKIPPED skipped, $CONFLICTS conflicts"
          
          if [ $CHERRY_PICKED -eq 0 ]; then
            echo "No new commits were cherry-picked"
            exit 0
          fi
      
      - name: Push changes
        run: |
          if git diff --quiet origin/main; then
            echo "No changes to push"
          else
            git push origin main
            echo "Successfully pushed cherry-picked commits"
          fi
